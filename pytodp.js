var pytania = ["Jakie znasz rodzaje baz danych?",
    "Co to jest baza danych?",
    "Co to jest tabela?",
    "Co to jest pole?",
    "Co to jest rekord?",
    "Co to jest klucz podstawowy?",
    "Co to jest klucz obcy?",
    "Co to jest relacja?",
    "Jakie znasz typy danych MySQL?",
    "Podaj składnię zapytania tworzącego bazę danych.",
    "Podaj składnię zapytania tworzącego tabelę.",
    "Podaj składnię zapytania tworzącego tabelę wykorzystując zapytanie SELECT.",
    "Co to jest widok? Jak można utworzyć widok?",
    "Do czego służy zapytanie SELECT?",
    "Jak można posortować wyniki po jakiejś kolumnie rosnąco?",
    "Co oznacza klauzula LIKE?",
    "Do czego w zapytaniu SELECT służy BETWEEN?",
    "Co oznacza LIMIT 1?",
    "W jaki sposób łączymy dwie lub więcej tabel ze sobą?",
    "Co oznacza klauzula GROUP BY?",
    "Co oznacza klauzula HAVING?",
    "Co oznacza klauzula DISTINCT? Podaj przykład.",
    "Co to są aliasy i jak je zastosować?",
    "Do czego służy zapytanie INSERT INTO?",
    "Jak można wprowadzić kilka rekordów za pomocą jednego zapytania INSERT?",
    "Do czego służy zapytanie UPDATE?",
    "Jak można zmienić wartości w dwóch kolumnach jednocześnie za pomocą jednego zapytania UPDATE?",
    "Do czego służy zapytanie DROP?",
    "Do czego służy zapytanie DELETE?",
    "Do czego służy zapytanie TRUNCATE?",
    "Wyjaśnij różnice pomiędzy zapytaniami DROP, DELETE, TRUNCATE?",
    "Do czego służy instrukcja ALTER?",
    "Jak można dodać kolumnę do istniejącej tabeli?",
    "Co oznaczają słowa FIRST i AFTER w instrukcji ALTER?",
    "Jak można zmienić nazwę tabeli?",
    "Jak można dodać lub usunąć klucz podstawowy w tabeli?",
    "Do czego służy instrukcja ALTER?",
    "Jak można dodać kolumnę do istniejącej tabeli?",
    "Co oznaczają słowa FIRST i AFTER w instrukcji ALTER?",
    "Jak można zmienić nazwę tabeli?",
    "Jak można dodać lub usunąć klucz podstawowy w tabeli?",
    "Co to są transakcje?",
    "Jakie znasz właściwości ACID? Omów każdą z nich. Rozwiń skrót ACID.",
    "Jakie znasz poziomy izolacji transakcji?",
    "Do czego służy instrukcja GRANT?",
    "Do czego służy instrukcja REVOKE?",
    "Jak wykonać kopię zapasową?",
    "Co to jest kopia zapasowa? Po co ją tworzymy?",
    "Jak odtworzyć kopię zapasową?",
    "Co to jest normalizacja bazy danych?",
    "Jakie znasz postacie normalne? Omów każdą z nich.",
    "Wymień zalety normalizacji bazy danych."];

var odpowiedzi1 = [
    `Relacyjna, Obiektowa, Rozproszona, Hurtowa`,
    `Jest to forma magazynowania danych zgodnie z określonymi regułami`,
    `Sposób zapisu danych. Jest to złożony z kolumn i wierszy pojemnik na dane`,
    `Jest to pojedyncza zmienna z tabeli`,
    `Rekord jest to jeden wiersz danych (jedna krotka w relacji).`,
    `Klucz podstawowy jest to wartość identyfikująca dane pole, dzięki czemu jest ono unikalne`,
    `Klucz obcy jest to odwołanie do klucza podstawowego w innej tabeli`,
    `Relacja jest to dowiązanie pomiędzy elementami z różnych tabel`,
    `Przykładowe typy danych: varchar2, int, bool, double, date, bit`,
    ` CREATE DATABASE [nazwa];`,
    ` CREATE TABLE [nazwa] ([pole 1] [typ 1], [pole 2] [typ 2] ,…]);`,
    ` `,
    ` Widok jest to podzapytanie umożliwiające wygodniejsze zaglądanie do potrzebnych nam danych CREATE VIEW [nazwa] as [polecenie];`,
    ` Służy do wybierania potrzebnych nam rekordów z bazy danych pod danymi warunkami`,
    ` Należy posłużyć się klauzulą ORDER BY [kolumna] ASC; na końcu zapytania`,
    ` LIKE służy ona do znajdywania określonych zmiennych i wyrazów`,
    ` BETWEEN … AND … służy do znajdywania wartości w podanym przedziale`,
    ` LIMIT 1 ogranicza wypisywane wyniki do jednego z góry`,
    ` Łączymy je za pomocą klauzuli JOIN`,
    ` GROUP BY grupuje ona wyrazy co umożliwia używanie funkcji agregacyjnych `,
    ` HAVING jest to wykonywana po grupowaniu operacja mająca na celu sprecyzowania potrzebnych danych`,
    ` DISTINCT - jest to klauzula, dzięki której jesteśmy w stanie ograniczyć ilość informacji, poprzez eliminacje danych powtarzających się w zapytaniu. Przykład: SELECT DISTINCT info FROM info1;`,
    ` Aliasy to nazwy pomagające zidentyfikować daną część zapytania, by było lepiej czytelne. Aby je zastosować należy posłużyć się klauzulą AS przy nazwie pola w zapytaniu. Przykład: SELECT info AS „informacje” FROM info1;`,
    ` INSERT INTO służy do wprowadzania rekordów do tabeli`,
    ` INSERT INTO [tabela] VALUES ( [wartości rekordu 1 {, …} ] ) , ( [wartości rekordu 2 {, …}] );`,
    ` UPDATE służy do aktualizowania danych rekordów i zmiany ich wartości`,
    ` UPDATE [tabela] SET [kolumna1] = {wartość}, [kolumna2] = {wartość} WHERE [warunek];`,
    ` DROP służy do usuwania tabeli, kolumn, widoku bądź bazy danych`,
    ` DELETE służy do usuwania rekordów`,
    ` TRUNCATE usuwa wszystkie rekordy z tabeli`,
    ` Podział: <br> DROP – usuwa tabele, kolumny, widoki lub bazę <br> DELETE – usuwa rekordy, pod ustawionym warunkiem <br> TRUNCATE – usuwa wszystkie rekordy z tabeli`,
    ` ALTER służy do zmian właściwości tabeli w bazie danych`,
    ` ALTER TABLE [nazwa] ADD ( [nazwa kolumny] [typ kolumny] );`,
    ` Oznaczają gdzie w którym miejscu w tabeli ma znajdować się tworzona kolumna po którym elemencie. FIRST oznaczając, że kolumna ma być pierwsza, natomiast AFTER [kolumna], po danej kolumnie`,
    ` ALTER TABLE [nazwa] RENAME [nowa nazwa];`,
    ` Operując słowem kluczowym PRIMARY KEY`,
    `Dodawania: ALTER TABLE [nazwa tabeli] ADD PRIMARY KEY [nazwa kolumny]`,
    `Usuwanie: ALTER TABLE [nazwa tabeli] DROP CONSTRAINT [klucz główny];`,
    ` <button class="jumper" onclick='(wlacz(35))'>„35. ALTER TABLE [nazwa] RENAME [nowa nazwa];” ( powtóreczka pytania )</button>`,
    ` <button class="jumper" onclick='(wlacz(33))'>„33. ALTER TABLE [nazwa] ADD ( [nazwa kolumny] [typ kolumny);” ( powtóreczka pytania )</button>`,
    ` <button class="jumper" onclick='(wlacz(34))'>„34. Oznaczają gdzie w którym miejscu w tabeli ma znajdować się tworzona kolumna po którym elemencie. FIRST oznaczając, że kolumna ma być pierwsza, natomiast AFTER [kolumna], po danej kolumnie” ( powtóreczka pytania )</button>`,
    ` <button class="jumper" onclick='(wlacz(35))'>„35. ALTER TABLE [nazwa] RENAME [nowa nazwa];” ( powtóreczka pytania )</button>`,
    ` <button class="jumper" onclick='(wlacz(36))'>„36. Operując słowem kluczowym PRIMARY KEY Dodawania: ALTER TABLE [nazwa tabeli] ADD PRIMARY KEY [nazwa kolumny]; Usuwanie: ALTER TABLE [nazwa tabeli] DROP CONSTRAINT [klucz główny];” ( powtóreczka pytania )</button>`,
    ` Transakcje pomagają zachować potrzebną synchronizację bazy danych, oraz pomagają przy awariach.`,
    `A ( Atomicity ) C ( Consistency ) I ( Isolation ) D ( Durablility ) <br> - Atomowość – możliwość wycofania operacji w przypadku transakcji zakończonej niepowodzeniem <br> - Spójność – Sprawdzanie spójności danych zawartych w bazie, które nie powinny dopuszczać do łamania zasad ustalonych przez twórcę <br> - Izolacja – Jednocześnie wykonywane transakcje nie mają na siebie wpływu. <br>- Trwałość – Po zaakceptowaniu transakcji dane nie będą stracone`,
    `Read Uncommitted <br> Read Committed <br> Repetable Read <br> Serializable`,
    ` GRANT służy do przyznawania uprawnień danym użytkownikom w bazie danych do wykonywania konkretnych operacji na niej`,
    ` REVOKE służy do zabierania uprawnień danym użytkownikom w bazie danych do wykonywania konkretnych operacji na niej`,
    ` BACKUP DATABASE [nazwa bazy] TO DISK [ścieżka];`,
    ` Kopia zapasowa jest to kopia bazy danych wykonywana w razie awarii. Tworzymy ją aby móc przywrócić bazę do poprzedniego staniu w razie awarii.`,
    ` Jest to unikanie redundancji danych, czyli powtarzania się danych w wielu tabelach oraz zwiększenia uporządkowania danych w bazie.`,
    ` Są trzy postacie normalne: <br> - pierwsza postać normalna: każda wartość w bazie danych powinna być atomowa. <br>- druga postać normalna: pierwsza normalna i wszystkie kolumny muszą zależeć od klucza głównego <br>- trzecia postać normalna: druga normalna i niekluczowa kolumna nie może zależeć od innej niekluczowej kolumny`,
    ` Zalety normalizacji danych: <br>- zlikwidowanie problemu powtarzania danych. <br>- optymalizacja objętości bazy danych. <br>- optymalizacja efektywności obsługi bazy danych. <br> - minimalizacja zagrożenia błędami przy wprowadzaniu i usuwaniu danych (uniknięcie anomalii)`
]


odpowiedzi = [`Relacyjne, Obiektowe, Rozproszone, Hurtowe `,
`Baza danych to zorganizowany zbiór usystematyzowanych informacji, czyli danych, zwykle przechowywany w systemie komputerowym w formie elektronicznej. Bazą danych steruje zwykle system zarządzania bazami danych (DBMS).`,
`Tabele to podstawowe obiekty bazy danych, w których są przechowywane wszystkie informacje lub dane.`,
`Pole – pojedyncza zmienna, stanowiąca fragment struktury, unii, klasy, obiektu lub rekordu tabeli bazodanowej.`,
`W relacyjnych bazach danych rekord to jeden wiersz w tabeli, czyli jedna krotka w relacji. Podczas przetwarzania wyników zapytań do bazy danych, które mogą zawierać połączone dane z kilku tabel, pojedynczy wiersz również jest nazywany rekordem.`,
`Klucz podstawowy jest polem lub zestawem pól o unikatowych wartościach w tabeli. Wartości klucza mogą służyć do tworzenia odniesień do całych rekordów, ponieważ każdy rekord ma inną wartość klucza.`,
`Klucz obcy to tak naprawdę klucz podstawowy, ale wzięty z innej tabeli. Jest wykorzystywany w celu tworzenia relacji pomiędzy tabelami.`,
`Relacja jest to połączenie, które tworzymy między dwoma tabelami. Polega ono na logicznym złączeniu dwóch pól z dwóch różnych tabel.`,
`Int - liczba całkowita, Decimal - stałoprzecinkowe, Double - zmiennoprzecinkowe, Boolean - zmienna logiczna, Date - data, Bit - wartość binarna, Varchar - zmienna znakowa, `,
`CREATE DATABASE nazwa_bazy_danych; `,
`CREATE TABLE nazwa_tabeli(nazwa_kolumny typ_danych parametry, ...); `,
`CREATE TABLE [nazwa] (SELECT [kolumny] FROM [tabela_z_zapytania]); `,
`Widoki to nic innego jak zapytania SQL, które zostały zapisane i są przechowywane w bazie danych pod pewną nazwą. `,
`Służy do pobierania i przetwarzania danych zapisanych w bazie danych.`,
`Z pomocą przychodzi Nam klauzula ORDER BY. Użycie jej jest bardzo proste, wystarczy podać nazwę kolumny po której chcemy sortować dane.`,
`Klauzula LIKE pozwala przefiltrować tabelę na podstawie tylko części wartości tekstowej. `,
`BETWEEN (ang. pomiędzy) służy do określania parametrów brzegowych w warunkach w klauzuli WHERE. `,
`LIMIT 1 ogranicza wypisywane wyniki do jednego z góry. `,
`Łączymy je za pomocą klauzuli JOIN, bądź dodajemy wiersze z jednej do drugiej za pomocą UNION.`,
`Umożliwia podział wierszy na logiczne grupy, co pozwala na użycie funkcji agregujących.`,
`Filtrowanie w HAVING, polega na filtrowaniu całych grup rekordów. `,
`Klauzula DISTINCT powoduje, że zapytanie ignoruje zduplikowane wyniki zapytania. `,
`nazwa zastępcza, którą możemy zdefiniować dla konkretnej kolumny lub tabeli na początku zapytania, a następnie używać w całym zapytaniu jako wygodniejsza nazwa. `,
`Pozwala na dodanie jednego lub wielu rekordów do tabeli. Nazywa się to zapytanie dołączające. `,
``,
`Służy do aktualizacji rekordów w bazie danych. `,
``,
`DROP pozwala na usunięcie indexów, tablic, baz danych. `,
`Służy do kasowania wybranych wierszy z danej tabeli. `,
`Usuwa wszystkie wiersze z tabeli bez rejestrowania usunięcia poszczególnych wierszy. `,
`Podział:
DROP – usuwa tabele, kolumny, widoki lub bazę.
DELETE – usuwa rekordy, pod ustawionym warunkiem.
TRUNCATE – usuwa wszystkie rekordy z tabeli.`,
`ALTER służy do zmian właściwości tabeli w bazie danych.`,
``,
`Oznaczają w którym miejscu w tabeli ma znajdować się tworzona kolumna. FIRST oznaczając, że kolumna ma być pierwsza, natomiast AFTER po podanej kolumnie. `,
``,
``,
`<button class="jumper" onclick='(wlacz(31))'>Powtórka pytania 32</button>`,
`<button class="jumper" onclick='(wlacz(32))'>Powtórka pytania 33</button>`,
`<button class="jumper" onclick='(wlacz(33))'>Powtórka pytania 34</button>`,
`<button class="jumper" onclick='(wlacz(34))'>Powtórka pytania 35</button>`,
`<button class="jumper" onclick='(wlacz(35))'>Powtórka pytania 36</button>`,
`Transakcje pomagają zachować potrzebną synchronizację bazy danych, oraz pomagają przy awariach.`,
`A ( Atomicity ) C ( Consistency ) I ( Isolation ) D ( Durablility )<br>    
- Atomowość – możliwość wycofania operacji w przypadku transakcji zakończonej niepowodzeniem <br>
- Spójność – Sprawdzanie spójności danych zawartych w bazie, które nie powinny dopuszczać do łamania zasad ustalonych przez twórcę<br>
- Izolacja – Jednocześnie wykonywane transakcje nie mają na siebie wpływu.<br>
- Trwałość – Po zaakceptowaniu transakcji dane nie będą stracone`,
`Read Uncommitted
Read Committed
Repetable Read
Serializable`,
`GRANT służy do przyznawania uprawnień danym użytkownikom w bazie danych do wykonywania konkretnych operacji na niej. `,
`REVOKE służy do zabierania uprawnień danym użytkownikom w bazie danych do wykonywania konkretnych operacji na niej. `,
`(dopisać)`,
`Kopia zapasowa jest to kopia bazy danych wykonywana w razie awarii. Tworzymy ją aby móc przywrócić bazę do poprzedniego staniu w razie awarii.`,
`Utworzyć nową bazę i wczytać pliki`,
`Jest to unikanie redundancji danych, czyli powtarzania się danych w wielu tabelach oraz zwiększenia uporządkowania danych w bazie.`,
`Są trzy postacie normalne:
- pierwsza postać normalna: każda wartość w bazie danych powinna być atomowa.
- druga postać normalna: pierwsza normalna i wszystkie kolumny muszą zależeć od klucza głównego
- trzecia postać normalna: druga normalna i niekluczowa kolumna nie może zależeć od innej niekluczowej kolumny`,
`Zalety normalizacji danych:
- zlikwidowanie problemu powtarzania danych.
- optymalizacja objętości bazy danych.
- optymalizacja efektywności obsługi bazy danych.
- minimalizacja zagrożenia błędami przy wprowadzaniu i usuwaniu danych (uniknięcie anomalii)`];